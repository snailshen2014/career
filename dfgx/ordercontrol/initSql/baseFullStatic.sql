-- 区分本网异网 联通电信 --
INSERT INTO SYS_COMMON_CFG VALUES ('SERVICE_PROVIDER_TYPE', '1', '区分电信和联通服务类型！！！ 1为电信 0为联通');
INSERT INTO SYS_COMMON_CFG VALUES ('SERVICE_IS_YW', '0', '区分工单服务类型（本网或者异网）0为本网 1为异网');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ACTIVITYSTATUS.DELETE', '/*!mycat:sql=select * FROM PLT_USER_LABEL WHERE TENANT_ID = ''TTTTTENANT_ID''  */DELETE  FROM TTTTTABLENAME  WHERE ACTIVITY_SEQ_ID = AAAAACTIVITY_SEQ_ID AND CHANNEL_ID = ''CCCCCHANNEL_ID''', '工单失效移历史-删除数据');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ACTIVITYSTATUS.MOVE', '/*!mycat:sql=select * FROM PLT_USER_LABEL WHERE TENANT_ID = ''TTTTTENANT_ID''  */INSERT INTO TTTTTABLENAME_HIS SELECT * FROM TTTTTABLENAME WHERE ACTIVITY_SEQ_ID = AAAAACTIVITY_SEQ_ID AND CHANNEL_ID = ''CCCCCHANNEL_ID''', '工单失效移历史-数据移入历史');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ACTIVITYSTATUS.UPDATE', '/*!mycat:sql=select * FROM PLT_USER_LABEL WHERE TENANT_ID = ''TTTTTENANT_ID''  */UPDATE TTTTTABLENAME SET INPUT_DATE = NOW() WHERE ACTIVITY_SEQ_ID = AAAAACTIVITY_SEQ_ID AND CHANNEL_ID = ''CCCCCHANNEL_ID''', '工单失效移历史-更新失效时间');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ASYNBLACKANDWHITE.INTOTABLE', '10000', '黑白名单数据同步-每次插入数据量');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ASYNBLACKANDWHITE.TRUNCATEDATASQL', '/*!mycat:sql=select * FROM PLT_USER_LABEL WHERE TENANT_ID = TTTTTENANT_ID*/ALTER TABLE PLT_ACTIVITY_FILTE_USERS TRUNCATE PARTITION PPPPPART', '黑白名单数据同步-清除无效分区数据sql');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ASYNUSER.FILE.SUFFIX', '.csv', '用户数据同步-文件名后缀');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ASYNUSER.MYSQL.DROPTABLE', '/*!mycat:sql=select * FROM PLT_USER_LABEL WHERE TENANT_ID = ''TTTTTENANT_ID''  */DROP TABLE IF EXISTS  PLT_USER_LABEL_PPPPPART', '用户数据同步-删除无效的分区表sql');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ASYNUSER.MYSQL.FILENAME', '/mnt/dxdataasyn/USER_LABEL_DATA_', '用户数据同步-本地路径');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ASYNUSER.MYSQL.INTODBNUM', '100000', '用户数据同步-每次入库的数量');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('CHANNELORDERCOUNTLIST', 'activityIdList,tenantId', null);
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('CROSSDBSYNDATA.BATCHRECS', '10000', null);
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('CROSSDBSYNDATA.COMMITRECS', '100', null);
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('CROSSDBSYNDATA.THREADNUMS', '3', null);
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('DAY_STATISTIC', '2017-01-10', '每天工单统计的时间');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('DS.MYSQL.DRIVER', 'com.mysql.jdbc.Driver', 'mysql驱动');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('DS.XCLOUD.DRIVER', 'com.bonc.xcloud.jdbc.XCloudDriver', '行云驱动URL');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ENVIRONMENT_FLAG', '3', 'channel环境标识');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('GENORDER.MYSQL.COLUMN', 'ACTIVITY_SEQ_ID,CHANNEL_ID,TENANT_ID,USER_ID,PHONE_NUMBER,ORDER_ASSIGNED_ORG_PATH,ORDER_ASSIGNED_LOGIN_ID,AREA_NO,CITY_NO,ORDER_ASIGNER_PATH,ORDER_ASSIGNER_LOGIN_ID,CONTACT_DATE,CONTACT_TYPE,CONTACT_RESULT,CONTACT_NUM,CONTACT_NUM_DAY,CONTACT_MSG,CONTACT_MSG_RESERVE1,CONTACT_MSG_RESERVE2,ORDER_STATUS,CHANNEL_STATUS,USERDATA_DEAL_MONTH,ORDER_DEAL_MONTH,SERVICE_TYPE,BEGIN_DATE,END_DATE,USERDATA_LAST_UPDATE_TIME,  USERLABEL_RESERVE1,USERLABEL_RESERVE2,USERLABEL_RESERVE3,USERLABEL_RESERVE4,USERLABEL_RESERVE5,USERLABEL_RESERVE6,USERLABEL_RESERVE7,USERLABEL_RESERVE8,USERLABEL_RESERVE9,USERLABEL_RESERVE10,USERLABEL_RESERVE11,USERLABEL_RESERVE12,USERLABEL_RESERVE13,USERLABEL_RESERVE14,USERLABEL_RESERVE15,USERLABEL_RESERVE16,USERLABEL_RESERVE17,USERLABEL_RESERVE18,USERLABEL_RESERVE19,USERLABEL_RESERVE20,USERLABEL_RESERVE21,USERLABEL_RESERVE22,USERLABEL_RESERVE23,USERLABEL_RESERVE24,USERLABEL_RESERVE25,USERLABEL_RESERVE26,USERLABEL_RESERVE27,USERLABEL_RESERVE28,USERLABEL_RESERVE29,USERLABEL_RESERVE30,USERLABEL_RESERVE31,USERLABEL_RESERVE32,USERLABEL_RESERVE33,USERLABEL_RESERVE34,USERLABEL_RESERVE35,USERLABEL_RESERVE36,USERLABEL_RESERVE37,USERLABEL_RESERVE38,USERLABEL_RESERVE39,USERLABEL_RESERVE40,USERLABEL_RESERVE41,USERLABEL_RESERVE42,USERLABEL_RESERVE43,USERLABEL_RESERVE44,USERLABEL_RESERVE45,USERLABEL_RESERVE46,USERLABEL_RESERVE47,USERLABEL_RESERVE48,USERLABEL_RESERVE49,USERLABEL_RESERVE50,BUSINESS_RESERVE1, BUSINESS_RESERVE2, BUSINESS_RESERVE3, BUSINESS_RESERVE4, BUSINESS_RESERVE5, BUSINESS_RESERVE6, BUSINESS_RESERVE7, BUSINESS_RESERVE8, BUSINESS_RESERVE9, BUSINESS_RESERVE10,BUSINESS_RESERVE11,BUSINESS_RESERVE12,BUSINESS_RESERVE13,BUSINESS_RESERVE14,BUSINESS_RESERVE15,BUSINESS_RESERVE16,BUSINESS_RESERVE17,BUSINESS_RESERVE18,BUSINESS_RESERVE19,BUSINESS_RESERVE20,BUSINESS_RESERVE21,BUSINESS_RESERVE22,BUSINESS_RESERVE23,BUSINESS_RESERVE24,BUSINESS_RESERVE25,BUSINESS_RESERVE26,BUSINESS_RESERVE27,BUSINESS_RESERVE28,BUSINESS_RESERVE29,BUSINESS_RESERVE30,BUSINESS_RESERVE31,BUSINESS_RESERVE32,BUSINESS_RESERVE33,BUSINESS_RESERVE34,BUSINESS_RESERVE35,BUSINESS_RESERVE36,BUSINESS_RESERVE37,BUSINESS_RESERVE38,BUSINESS_RESERVE39,BUSINESS_RESERVE40,BUSINESS_RESERVE41,BUSINESS_RESERVE42,BUSINESS_RESERVE43,BUSINESS_RESERVE44,BUSINESS_RESERVE45,BUSINESS_RESERVE46,BUSINESS_RESERVE47,BUSINESS_RESERVE48,BUSINESS_RESERVE49,BUSINESS_RESERVE50,CONTACT_CODE,SUCCESS_STATUS,SUCCESS_UPDATE_TIME,SUCCESS_PRODUCT_LIST,SUCCESS_DATEID', '工单表除主键以外列名');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('GENORDER.MYSQL.COPY', '/*!mycat:sql=select * FROM PLT_USER_LABEL WHERE TENANT_ID = ''TTTTTENANT_ID''  */INSERT INTO  TTTTTBALENAME(CCCCCOLUMN) SELECT CCCCCOLUMN FROM PLT_ORDER_INFO_TEMP WHERE  CHANNEL_ID = CCCCCHANNEL_ID  limit NNNNNUM', '临时表如工单表sql');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('GENORDER.MYSQL.DELETE', '/*!mycat:sql=select * FROM PLT_USER_LABEL WHERE TENANT_ID = ''TTTTTENANT_ID''  */DELETE FROM  PLT_ORDER_INFO_TEMP WHERE  CHANNEL_ID = CCCCCHANNEL_ID  limit NNNNNUM', '工单删除语句');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('GENORDER.MYSQL.TRUNCATE', '/*!mycat:sql=select * FROM PLT_USER_LABEL WHERE TENANT_ID = ''TTTTTENANT_ID''  */TRUNCATE TABLE PLT_ORDER_INFO_TEMP', '清空临时表sql');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('GETDATAFROMXCLOUD', '/*!mycat:sql=select * FROM XCLOUD_TTTTTENANT_ID */', 'mycat路由行云sql');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('GET_CUBE_ID', 'C12419292583', '获取账期立方体 区别本网异网');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('KAFKA_GROUP_ID', 'orderCenter', '场景营销kafka配置 groupid');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('KAFKA_INTERV_TIME', '5', '场景营销kafka配置 ');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('KAFKA_OFFSET_RESET', 'smallest', '场景营销kafka配置 ');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('KAFKA_SERIALIZER_CLASS', 'kafka.serializer.StringEncoder', '场景营销kafka配置 groupid');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('KAFKA_TOPIC_NAME', 'orderinfo_cl_03071006_3', '场景营销kafka配置拉取KAFKA TOPIC_NAME');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('KAFKA_ZKP_CONNECT', '10.161.48.144:2181,10.161.48.145:2181,10.161.48.146:2181', '场景营销kafka配置 ');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('KAFKA_ZKP_SESSON_TIME', '40000', '场景营销kafka配置 ');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('KAFKA_ZKP_SYNC_TIME', '4000', '场景营销kafka配置 ');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDER.USERLABEL.UPDATE.MAXTABLENUM', '50', '(不确定)');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDER.USERLABEL.UPDATE.ONE.NUMS', '10000','工单用户资料更新-每次更新的数量');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDER.USERLABEL.UPDATE.SQL.TABLES', 'SELECT DISTINCT TABLE_NAME FROM PLT_ORDER_TABLES_ASSIGN_RECORD_INFO WHERE BUSI_TYPE = ''0'' AND CHANNEL_ID IN(''7'') AND TENANT_ID=''TTTTTENANT_ID''','工单用户资料更新-需要更新的工单表');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDER.USERLABEL.UPDATE.SQL.UPDATE', '/*!mycat:sql=select * FROM PLT_ACTIVITY_INFO WHERE TENANT_ID = ''TTTTTENANT_ID''*/UPDATE TABLEAAAAA a,TABLEBBBBB b SET a.USERLABEL_RESERVE3 = b.CUST_NAME,a.USERLABEL_RESERVE4 = b.MB_ARPU,a.USERLABEL_RESERVE5 = b.MB_ONLINE_DUR,a.USERLABEL_RESERVE6 = b.MB_OWE_FEE,a.USERLABEL_RESERVE9 = b.KD_OWE_FEE,a.USERLABEL_RESERVE14 = b.MB_FIRST_OWE_MONTH, a.USERLABEL_RESERVE15 = b.RENT_FEE,a.USERLABEL_RESERVE18 = b.KD_NETIN_MONTHS,a.USERLABEL_RESERVE44 = b.ACCT_FEE,a.USER_ID = b.USER_ID,a.TENANT_ID = b.TENANT_ID,a.USERLABEL_RESERVE31 = b.KD_ADDR_SIX_NAME, a.USERLABEL_RESERVE43 = b.WENDING_FLAG WHERE a.USER_ID = b.USER_ID AND a.REC_ID >= MINID AND a.REC_ID < MAXID ', '工单用户资料更新-更新语句sql');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDER.USERLABEL.UPDATE.THREADSNUM', '4', '工单用户资料更新-定义线程数量');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERCHECK.FILTER.RUNFLG.uni081', 'FALSE', '事前成功标准过滤运行标识');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERCHECK.FILTER.SQL.INSERTMEMTABLE', 'INSERT INTO PLT_ORDER_CHECK_FILTER_MEM(USER_ID,TENANT_ID) SELECT DISTINCT USER_ID ,''TTTTTENANT_ID''  FROM  TTTTTABLENAME  WHERE ACTIVITY_SEQ_ID = AAAAACTIVITY_SEQ_ID  AND ORDER_STATUS =''0''', '事前成功标准过滤获取工单临时表数据入成功标准过滤临时表');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERCHECK.FILTER.TABLENAME', 'PLT_ORDER_INFO_TEMP', '事前成功标准过滤临时表（需要获取数据的表）');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERCHECK.SUCCESS.SQL.SUCESSTYPE', '{"3":"03","4":"02","5":"01"}', '特殊的成功标准类型（非精准营销）');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERCHECK.SUCESS.SQL.GETCLJYALLACCEPTEDLIST', 'SELECT PROD_INST_ID   AS USER_ID  FROM M_PRODUCT_ACCEPTED WHERE COMPLETE_DT > ''OOOOORDERCREATETIME'' AND OFFER_NBR IN (PPPPRODUCTINFO)', '精确匹配订购关系表');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERCHECK.SUCESS.SQL.GETCLJYUSERLABELINFO', 'AND PROD_INST_ID IN ( SELECT PB0000 FROM CUST_LABEL WHERE acct_day = ''MMMMMAXMONTHDAY'' AND PB0000 IN (UUUUUSERIDFORCHECK)', '精确匹配客户标签表');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERCHECK.SUCESS.SQL.GETCLQLALLACCEPTEDLIST', 'SELECT PROD_INST_ID AS USER_ID  FROM M_PRODUCT_ACCEPTED WHERE  PROD_TYPE =''PPPPPRODTYPE'' AND COMPLETE_DT > ''OOOOORDERCREATETIME'' AND PROD_INST_ID IN (', '全量匹配订购关系表（特殊成功类型）');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERCHECK.SUCESS.SQL.GETCLQLUSERLABELINFO', 'SELECT PB0000  AS USER_ID FROM CUST_LABEL WHERE  acct_day =  ''MMMMMAXMONTHDAY'' AND PB0000 IN (UUUUUSERIDFORCHECK)', '全量匹配客户标签表');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERCHECK.SUCESS.SQL.INSERTMEMTABLE', 'INSERT INTO PLT_ORDER_CHECK_SUCESS_MEM(USER_ID,TENANT_ID) | SELECT DISTINCT USER_ID ,''TTTTTENANT_ID''  FROM  TTTTTABLENAME  WHERE ACTIVITY_SEQ_ID = AAAAACTIVITY_SEQ_ID AND ORDER_STATUS =''5''  AND (SUCCESS_STATUS != 1 OR SUCCESS_STATUS IS NULL)', '事后成功标准检查获取工单临时表数据入成功标准检查临时表');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERCHECK.SUCESS.SQL.QRYTABLENAME', ' SELECT DISTINCT TABLE_NAME FROM PLT_ORDER_TABLES_ASSIGN_RECORD_INFO WHERE ACTIVITY_SEQ_ID = AAAAACTIVITY_SEQ_ID AND BUSI_TYPE=''0''  AND TENANT_ID=''TTTTTENANT_ID''', '事后成功标准检查需要获取数据的工单表');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERCONTROLCENTERFLAG', 'TRUE', null);
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERCONTROLCENTERSINGLEINSTANCECHECKFLAG', 'FALSE','ordercontrol是否控制单实例');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('CHANNELCONTROLCENTERSINGLEINSTANCECHECKFLAG', 'FALSE', 'channelcontrol是否控制单实例的');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERFAILURE.DELETE.PHONE.INDEX.NUM', '2000', '工单失效删除手机号索引-每次删除的数量');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERFAILURE.DELETE.PHONE.INDEX.SQL', '/*!mycat:sql=select * FROM PLT_USER_LABEL WHERE TENANT_ID = ''TTTTTENANT_ID''  */DELETE FROM TTTTTABLENAME WHERE ACTIVITY_SEQ_ID = AAAAACTIVITY_SEQ_ID AND CHANNEL_ID = ''CCCCCHANNEL_ID''', '工单失效删除手机号索引-sql语句');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERSUCESSCHECK.SQLPRE', '/*!mycat:sql=select * FROM PLT_ACTIVITY_INFO WHERE TENANT_ID = ''TTTTTENANT_ID''  */', '所属省份数据库的mycat路由（租户区分）');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERSUCESSCHECK.THREADSNUM', '4', '成功标准线程数');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDER_LOCALPATH', '/mnt/order/data/', '工单生成本地服务路径--工单入库时用');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDER_SPLIT_NUM', '500000', '工单文件入库前拆分数');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('REALFLOW_VARIABLE', 'allDinnerGprs,allGprs,freeGprs', 'channel实时流量接口变量列表');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('REALPRODUCT_VARIABLE', 'dinnerDesc', 'channel实时套餐接口变量列表');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ROUTE_SQL_XCLOUD', '/*!mycat:sql=select * FROM XCLOUD_TTTTTENANT_ID*/', 'channel');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('RULE.QUERY.ALL', 'SELECT RULE_ID,TENANT_ID,RULE_TYPE,CHANNEL_ID,ACTIVITY_ID,MAX_DAY,MAX_TIMES,MAX_STATE,STEP_NUM,STEP_UNIT,STEP_STATE,STATUS,DATE_FORMAT(CREATE_DATE,''%Y-%m-%d %H:%i:%s'') CREATE_DATE,DATE_FORMAT(LAST_UPDATE_DATE,''%Y-%m-%d %H:%i:%s'') LAST_UPDATE_DATE,LOGIN_ID,LOGIN_NAME FROM SYS_RULE_INFO ', 'channel');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('SCENCE_CONSUMER_ISRUN', '0', '场景营销工单定时任务是否开启 1开启 0关闭');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('SCENE.ORDER.LIFECYCLE', '30', '场景营销线程存活时间 单位：分钟');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('SCENE.ORDER.STEPTIME', '500', '场景营销kafka一次拉入数据量');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('TASK.EXECUTE.CHANNEL', '8,81,82,83,D,d,5', '加手机号索引-配置渠道');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('TASK.EXECUTE.INTOTABLE', '100000', '加手机号索引-每次执行的数据量');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('TRANSCATION_NUMS', '50000', '事务一次性提交数量--工单临时表入正式表用');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('UPDATEUSERID.TABLE', 'PLT_ORDER_INFO,PLT_ORDER_INFO_POPWIN', '需要更新userID的工单表名');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('UPDATEUSERID.UPDATE', '/*!mycat:sql=select * FROM TTTTTABLENAME WHERE TENANT_ID=''TTTTTENANT_ID''*/UPDATE PLT_USER_CHANGE u,TTTTTABLENAME o SET o.USER_ID=u.NEW_USER_ID WHERE u.OLD_USER_ID=o.USER_ID AND u.TENANT_ID=''TTTTTENANT_ID'' AND o.TENANT_ID=''TTTTTENANT_ID''/*!mycat:sql=select * FROM TTTTTABLENAME WHERE TENANT_ID=''TTTTTENANT_ID''*/UPDATE PLT_USER_CHANGE u,TTTTTABLENAME o SET o.USER_ID=u.NEW_USER_ID WHERE u.OLD_USER_ID=o.USER_ID AND u.TENANT_ID=''TTTTTENANT_ID'' AND o.TENANT_ID=''TTTTTENANT_ID'' AND DATE_ID IN (SELECT MAX(DATE_ID) DATE_ID FROM PLT_USER_CHANGE WHERE TENANT_ID = ''TTTTTENANT_ID'')', '更新工单表userID的sql语句');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDER_REMOTEPATH', 'HDFS:/files/prov/opdn1_076/dxorder/', '工单行云出库时ftp的远程目录--地址验证方式可在行云客户端执行出库到该目录的操作无错误');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ASYNUSER.XCLOUD.FILENAME', 'HDFS:/files/prov/opdn1_076/dxdatasyn/USER_LABEL_DATA_', '文件名');
INSERT INTO  SYS_COMMON_CFG (CFG_KEY, CFG_VALUE, NOTE) VALUES ('ORDERFAILURE.CLEAN.ORDER.NUM','5000','工单失效一次处理工单数量');

